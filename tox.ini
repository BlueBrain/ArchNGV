[base]
name = archngv
testdeps =
    mock
    cython # needed for compiling tess
    pytest

[tox]
envlist =
    check-version
    lint
    py38
    functional

indexserver =
    default = https://bbpteam.epfl.ch/repository/devpi/simple

ignore_basepython_conflict = true

[testenv]
extras = all
deps = {[base]testdeps}
commands = pytest tests/unit
basepython = python3.8

[testenv:check-version]
skip_install = true
deps = bbp-nse-ci
commands = do_release.py -p . check-version

[testenv:lint]
deps =
    cython
    pycodestyle
    pylint
commands =
    pycodestyle {[base]name}
    pylint {[base]name}

[testenv:functional]
extras = all
deps =
    {[base]testdeps}
    morph-tool
    snakemake<6
changedir = tests/functional
commands =./run.sh
passenv =
    # pass the module variables to make "module purge" work as expected
    MODULESHOME
    MODULEPATH
    LOADEDMODULES
    _LMFILES_

[testenv:coverage]
deps =
    {[base]testdeps}
    pytest-cov
commands =
    pytest \
    --cov-report term-missing \
    --cov-report xml \
    --cov-report html \
    --cov={envsitepackagesdir}/{[base]name} \
    tests/unit

[testenv:docs]
changedir = doc
deps =
extras = docs
# set warnings as errors using the -W sphinx option
commands = make html SPHINXOPTS=-W
whitelist_externals = make

# E126 continuation line over-indented for hanging indent
# E127: continuation line over-indented for visual indent
# E128: continuation line under-indented for visual indent
# E731: do not assign a lambda expression, use a def
# W504: line break after binary operator
[pycodestyle]
exclude = extras,workflow,tests
ignore = E126, E127,E128,E731,W504
max-line-length = 120
